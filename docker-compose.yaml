services:
    server:
        container_name: server
        build:
            context: .
            dockerfile: dockerfile.server
        working_dir: /app
        command: >
            bash -c "LOG_LEVEL=critical uv run scripts/migrate.py && uv run uvicorn server.main:app --host 0.0.0.0 --port 3000 --reload"
        ports:
            - "3000:3000"
        environment:
            - ENVIRONMENT=local
            - WATCHFILES_FORCE_POLLING=true
            - UV_SYSTEM_PYTHON=true
            - UV_PROJECT_ENVIRONMENT=/var/venv
            - DATASTORES__DATABASE_URL=postgresql://postgres:postgres@postgres:5432/example
            - DATASTORES__REDIS_URL=redis://redis:6379
        volumes:
            - .:/app
        restart: on-failure
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
    worker:
        container_name: worker
        build:
            context: .
            dockerfile: dockerfile.worker
        working_dir: /app
        command: uv run arq worker.main.WorkerSettings --watch .
        environment:
            - ENVIRONMENT=local
            - WATCHFILES_FORCE_POLLING=true
            - UV_SYSTEM_PYTHON=true
            - UV_PROJECT_ENVIRONMENT=/var/venv
            - DATASTORES__DATABASE_URL=postgresql://postgres:postgres@postgres:5432/example
            - DATASTORES__REDIS_URL=redis://redis:6379
        volumes:
            - .:/app
        restart: on-failure
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
    redis:
        image: redis
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
            interval: 1s
            timeout: 3s
            retries: 5
    postgres:
        image: postgres
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            PGUSER: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: example
